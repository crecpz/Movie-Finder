@use "./function" as *;
@use "./break-point" as *;
@use "./map" as *;

// flex
@mixin flex($dir: row, $jc: flex-start, $ai: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $dir;
  justify-content: $jc;
  align-items: $ai;
  flex-wrap: $wrap;
}

// 檢查裝置是否支援hover，若有支援才執行此
@mixin hover-query() {
  @media (hover: hover) {
    @content;
  }
}

// 設成圓形
@mixin rounded-full {
  border-radius: 50%;
}

// 重置按鈕樣式
@mixin button-reset {
  background-color: transparent;
  border: 0;
  padding: 0;
}

// 用於設定文字大小
@mixin text($size) {
  font-size: deep-map-get($text, size, $size);
}

// 放入基本顏色，並以該顏色為基礎，將其暗化 20%，若其已經是最暗，則亮化 20%
@mixin hover-bg-color($current-bg-color) {
  @if (darken($current-bg-color, 20) == $current-bg-color) {
    background-color: lighten($current-bg-color, 20);
  } @else {
    background-color: darken($current-bg-color, 20);
  }
}

// 全局左右 padding
@mixin x-spacing {
  padding-left: map-get($x-spacing, lg);
  padding-right: map-get($x-spacing, lg);

  @include md {
    padding-left: map-get($x-spacing, sm);
    padding-right: map-get($x-spacing, sm);
  }
}

// <main> 內 layout 共同設定，目前使用於 New, Popular, Genres, Watchlist 頁面
@mixin main-layout {
  @include x-spacing;
  padding-top: calc(#{deep-map-get($height, header, lg)} + 3rem);
  padding-bottom: 3rem;
}

// * 將某一個元素的所有直系子元素出現時加上淡入效果
// - 需使用 .appear 來加進該元素當中才會觸發效果
@mixin elem-appear($amount) {
  // 選中某個元素的所有的直系子層
  & > :nth-child(n) {
    opacity: 0;
    transform: translateY(1.25rem);
    transition: map-get($transition, 800), map-get($transition, 800);
    transition-property: transform, opacity;
  }

  // 按照 $i 數量依序增加 transition-delay
  @for $i from 1 through $amount {
    & > :nth-child(#{$i}) {
      transition-delay: $i * 150ms;
    }
  }

  &.appear {
    & > :nth-child(n) {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// @mixin expand-layout($max-height) {
//   overflow-y: hidden;
//   max-height: $max-height;

//   // 遮蓋層
//   &::before {
//     content: "";
//     position: absolute;
//     bottom: 0;
//     width: 100%;
//     height: 100%;
//     transition: opacity map-get($transition, 500);
//     background-image: linear-gradient(to bottom, transparent, black);
//   }
// }
